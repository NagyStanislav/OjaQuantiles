// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// signC
double signC(double x);
RcppExport SEXP _OjaQuantiles_signC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(signC(x));
    return rcpp_result_gen;
END_RCPP
}
// cvectorC
arma::vec cvectorC(arma::mat X1, int d);
RcppExport SEXP _OjaQuantiles_cvectorC(SEXP X1SEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(cvectorC(X1, d));
    return rcpp_result_gen;
END_RCPP
}
// grdC
arma::vec grdC(arma::vec mu, arma::mat X1, arma::vec u, double alpha, int d);
RcppExport SEXP _OjaQuantiles_grdC(SEXP muSEXP, SEXP X1SEXP, SEXP uSEXP, SEXP alphaSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(grdC(mu, X1, u, alpha, d));
    return rcpp_result_gen;
END_RCPP
}
// OjaSGD
Rcpp::List OjaSGD(arma::mat X, arma::mat u, arma::vec alpha, int B, int batch, double gamma0, arma::vec gammas, arma::mat x0, int n, int d, int nq, bool trck);
RcppExport SEXP _OjaQuantiles_OjaSGD(SEXP XSEXP, SEXP uSEXP, SEXP alphaSEXP, SEXP BSEXP, SEXP batchSEXP, SEXP gamma0SEXP, SEXP gammasSEXP, SEXP x0SEXP, SEXP nSEXP, SEXP dSEXP, SEXP nqSEXP, SEXP trckSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type batch(batchSEXP);
    Rcpp::traits::input_parameter< double >::type gamma0(gamma0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nq(nqSEXP);
    Rcpp::traits::input_parameter< bool >::type trck(trckSEXP);
    rcpp_result_gen = Rcpp::wrap(OjaSGD(X, u, alpha, B, batch, gamma0, gammas, x0, n, d, nq, trck));
    return rcpp_result_gen;
END_RCPP
}
// OjaSGD2
Rcpp::List OjaSGD2(arma::mat X, arma::mat u, arma::vec alpha, int B, int batch, double gamma0, arma::mat x0, int n, int d, int nq, bool trck);
RcppExport SEXP _OjaQuantiles_OjaSGD2(SEXP XSEXP, SEXP uSEXP, SEXP alphaSEXP, SEXP BSEXP, SEXP batchSEXP, SEXP gamma0SEXP, SEXP x0SEXP, SEXP nSEXP, SEXP dSEXP, SEXP nqSEXP, SEXP trckSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type batch(batchSEXP);
    Rcpp::traits::input_parameter< double >::type gamma0(gamma0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nq(nqSEXP);
    Rcpp::traits::input_parameter< bool >::type trck(trckSEXP);
    rcpp_result_gen = Rcpp::wrap(OjaSGD2(X, u, alpha, B, batch, gamma0, x0, n, d, nq, trck));
    return rcpp_result_gen;
END_RCPP
}
// objfC
arma::vec objfC(arma::mat mu, arma::mat X, arma::vec u, double alpha, int n, int d, int nmu);
RcppExport SEXP _OjaQuantiles_objfC(SEXP muSEXP, SEXP XSEXP, SEXP uSEXP, SEXP alphaSEXP, SEXP nSEXP, SEXP dSEXP, SEXP nmuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nmu(nmuSEXP);
    rcpp_result_gen = Rcpp::wrap(objfC(mu, X, u, alpha, n, d, nmu));
    return rcpp_result_gen;
END_RCPP
}
// gfunC
Rcpp::List gfunC(arma::mat v, arma::mat X, arma::vec mu, int n, int d, int nv);
RcppExport SEXP _OjaQuantiles_gfunC(SEXP vSEXP, SEXP XSEXP, SEXP muSEXP, SEXP nSEXP, SEXP dSEXP, SEXP nvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nv(nvSEXP);
    rcpp_result_gen = Rcpp::wrap(gfunC(v, X, mu, n, d, nv));
    return rcpp_result_gen;
END_RCPP
}
// objfSpatialC
arma::vec objfSpatialC(arma::mat mu, arma::mat X, arma::vec u, double alpha, int n, int d, int nmu);
RcppExport SEXP _OjaQuantiles_objfSpatialC(SEXP muSEXP, SEXP XSEXP, SEXP uSEXP, SEXP alphaSEXP, SEXP nSEXP, SEXP dSEXP, SEXP nmuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nmu(nmuSEXP);
    rcpp_result_gen = Rcpp::wrap(objfSpatialC(mu, X, u, alpha, n, d, nmu));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_OjaQuantiles_signC", (DL_FUNC) &_OjaQuantiles_signC, 1},
    {"_OjaQuantiles_cvectorC", (DL_FUNC) &_OjaQuantiles_cvectorC, 2},
    {"_OjaQuantiles_grdC", (DL_FUNC) &_OjaQuantiles_grdC, 5},
    {"_OjaQuantiles_OjaSGD", (DL_FUNC) &_OjaQuantiles_OjaSGD, 12},
    {"_OjaQuantiles_OjaSGD2", (DL_FUNC) &_OjaQuantiles_OjaSGD2, 11},
    {"_OjaQuantiles_objfC", (DL_FUNC) &_OjaQuantiles_objfC, 7},
    {"_OjaQuantiles_gfunC", (DL_FUNC) &_OjaQuantiles_gfunC, 6},
    {"_OjaQuantiles_objfSpatialC", (DL_FUNC) &_OjaQuantiles_objfSpatialC, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_OjaQuantiles(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
